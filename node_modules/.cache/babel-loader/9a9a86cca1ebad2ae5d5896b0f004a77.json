{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\react\\\\course\\\\food-project\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defauktCartState = {\n  items: [],\n  totalAmaunt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    console.log(\"add\", action);\n    const updatedItems = state.items.concat(action.items);\n    const updatedTotalAmount = state.totalAmaunt;\n    return {\n      items: updatedItems,\n      totalAmaunt: updatedTotalAmount\n    };\n  }\n\n  return defauktCartState;\n};\n\nconst CardProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defauktCartState);\n\n  const addItemCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmaunt: cartState.totalAmaunt,\n    addItem: addItemCartHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardProvider, \"AivdGpz29/RRtzaEt+N+NYPHz/A=\");\n\n_c = CardProvider;\nexport default CardProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"sources":["D:/dev/react/course/food-project/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defauktCartState","items","totalAmaunt","cartReducer","state","action","type","console","log","updatedItems","concat","updatedTotalAmount","CardProvider","props","cartState","dispatchCartAction","addItemCartHandler","item","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,MAAnB;AACA,UAAMI,YAAY,GAAGL,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmBL,MAAM,CAACJ,KAA1B,CAArB;AACA,UAAMU,kBAAkB,GAAGP,KAAK,CAACF,WAAjC;AACA,WAAO;AACLD,MAAAA,KAAK,EAAEQ,YADF;AAELP,MAAAA,WAAW,EAAES;AAFR,KAAP;AAID;;AACD,SAAOX,gBAAP;AACD,CAXD;;AAaA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCjB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMgB,kBAAkB,GAAIC,IAAD,IAAU;AACnCF,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,KAAP;AAAcW,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAChCJ,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEa,SAAS,CAACb,KADC;AAElBC,IAAAA,WAAW,EAAEY,SAAS,CAACZ,WAFL;AAGlBmB,IAAAA,OAAO,EAAEL,kBAHS;AAIlBM,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGP,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMX,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-content\";\r\n\r\nconst defauktCartState = {\r\n  items: [],\r\n  totalAmaunt: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    console.log(\"add\", action)\r\n    const updatedItems = state.items.concat(action.items);\r\n    const updatedTotalAmount = state.totalAmaunt;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmaunt: updatedTotalAmount\r\n    };\r\n  }\r\n  return defauktCartState\r\n};\r\n\r\nconst CardProvider = (props) => {\r\n\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defauktCartState)\r\n\r\n  const addItemCartHandler = (item) => {\r\n    dispatchCartAction({type: \"ADD\", item: item})\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({type: \"REMOVE\", id: id})\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmaunt: cartState.totalAmaunt,\r\n    addItem: addItemCartHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardProvider;\r\n"]},"metadata":{},"sourceType":"module"}